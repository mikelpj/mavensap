<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/tx 
                    	http://www.springframework.org/schema/tx/spring-tx.xsd 
                        ">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.asia"/>  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
  
    <bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${oracle.driver}" />  
        <property name="jdbcUrl" value="${crm1.url}" />  
        <property name="user" value="${crm1.user}" />  
        <property name="password" value="${crm1.pwd}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialPoolSize" value="${c3p0.minPoolSize}"></property>  
        <!-- 连接池最小数量 -->  
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
        <!-- 连接池最大数量 -->  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${c3p0.maxStatements}" /> 
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />   
        <!-- 回收连接时是否提交事务 -->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>   
    </bean>
    <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${oracle.driver}" />  
        <property name="jdbcUrl" value="${crm2.url}" />  
        <property name="user" value="${crm2.user}" />  
        <property name="password" value="${crm2.pwd}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialPoolSize" value="${c3p0.minPoolSize}"></property>  
        <!-- 连接池最小数量 -->  
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
        <!-- 连接池最大数量 -->  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${c3p0.maxStatements}" /> 
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />   
        <!-- 回收连接时是否提交事务 -->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>   
    </bean>
    <bean id="dataSource3" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${oracle.driver}" />  
        <property name="jdbcUrl" value="${crm3.url}" />  
        <property name="user" value="${crm3.user}" />  
        <property name="password" value="${crm3.pwd}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialPoolSize" value="${c3p0.minPoolSize}"></property>  
        <!-- 连接池最小数量 -->  
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
        <!-- 连接池最大数量 -->  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${c3p0.maxStatements}" /> 
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />   
        <!-- 回收连接时是否提交事务 -->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>   
    </bean>
    <bean id="dataSource4" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${oracle.driver}" />  
        <property name="jdbcUrl" value="${crm4.url}" />  
        <property name="user" value="${crm4.user}" />  
        <property name="password" value="${crm4.pwd}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialPoolSize" value="${c3p0.minPoolSize}"></property>  
        <!-- 连接池最小数量 -->  
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
        <!-- 连接池最大数量 -->  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${c3p0.maxStatements}" /> 
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />   
        <!-- 回收连接时是否提交事务 -->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>   
    </bean>
    <bean id="dataSource4gCs" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${oracle.driver}" />  
        <property name="jdbcUrl" value="${kfkcrm.url}" />  
        <property name="user" value="${kfkcrm.user}" />  
        <property name="password" value="${kfkcrm.pwd}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialPoolSize" value="${c3p0.minPoolSize}"></property>  
        <!-- 连接池最小数量 -->  
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
        <!-- 连接池最大数量 -->  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${c3p0.maxStatements}" /> 
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />   
        <!-- 回收连接时是否提交事务 -->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>   
    </bean>
    <bean id="dataSourceCen" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="${oracle.driver}" />  
        <property name="jdbcUrl" value="${cen1.url}" />  
        <property name="user" value="${cen1.user}" />  
        <property name="password" value="${cen1.pwd}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialPoolSize" value="${c3p0.minPoolSize}"></property>  
        <!-- 连接池最小数量 -->  
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
        <!-- 连接池最大数量 -->  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${c3p0.maxStatements}" /> 
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />   
        <!-- 回收连接时是否提交事务 -->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>   
    </bean>
    <bean id="dataSource" class="com.asia.util.DynamicDataSource">  
 		<property name="targetDataSources">  
 			<map>  
 				<entry value-ref="dataSource1" key="ds1"></entry>  
 				<entry value-ref="dataSource2" key="ds2"></entry>  
 				<entry value-ref="dataSource3" key="ds3"></entry>  
 				<entry value-ref="dataSource4" key="ds4"></entry>  
 				<entry value-ref="dataSource4gCs" key="ds4g"></entry>  
 				<entry value-ref="dataSourceCen" key="dsCen1"></entry>  
 			</map>  
  		</property>  
  		<property name="defaultTargetDataSource" ref="dataSource3"></property>  
  	</bean>    
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations">
        	<list>
       		 <value>classpath:mapping/*.xml</value>
        	 <value>classpath:mapping/marketing/*.xml</value>
        	</list>
        </property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.asia.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!-- 基于注释的事务，当注释中发现@Transactional时，使用id为“transactionManager”的事务管理器  -->
    <!-- 如果没有设置transaction-manager的值，则spring以缺省默认的事务管理器来处理事务，默认事务管理器为第一个加载的事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>  
  
</beans>  